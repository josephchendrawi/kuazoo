@{
    ViewBag.Title = "Location";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {
        changeverticalnav(12);
        $(document).tooltip();
    });
</script>
<div id="msgresult">
@if (ViewBag.msg != null && ViewBag.msg != "")
{
<div id="breadcrumbs">
    <div class="mainwrap">
        @if (ViewBag.msg == "1co")
        {
            <div class="notif csuccess"><div class="notifwrap success"><strong>Success:</strong> New Country successfully created</div></div>
        }
        else if (ViewBag.msg == "3co")
        {
            <div class="notif cerror"><div class="notifwrap error"><strong>Error:</strong> Failed Create New Country</div></div>
        }
        else if (ViewBag.msg == "11co")
        {
            <div class="notif csuccess"><div class="notifwrap success"><strong>Success:</strong> Country updated successfully</div></div>
        }
        else if (ViewBag.msg == "33co")
        {
            <div class="notif cerror"><div class="notifwrap error"><strong>Error:</strong> Failed Update Country</div></div>
        }
        else if (ViewBag.msg == "1ci")
        {
            <div class="notif csuccess"><div class="notifwrap success"><strong>Success:</strong> New City successfully created</div></div>
        }
        else if (ViewBag.msg == "3ci")
        {
            <div class="notif cerror"><div class="notifwrap error"><strong>Error:</strong> Failed Create New City</div></div>
        }
        else if (ViewBag.msg == "11ci")
        {
            <div class="notif csuccess"><div class="notifwrap success"><strong>Success:</strong> City updated successfully</div></div>
        }
        else if (ViewBag.msg == "33ci")
        {
            <div class="notif cerror"><div class="notifwrap error"><strong>Error:</strong> Failed Update City</div></div>
        }
    </div>
</div>
}
</div>

<div id="mainlist">
<div class="locationmain">
@(Html.Kendo().TabStrip()
        .Name("tabstrip")
        .Items(tabstrip =>
        {
            tabstrip.Add().Text("Country")
                .Selected(true)
                .Content(@<text>    
                
    <h1>Country <a href="CountryAdd" class="addNewBtn">Add New</a></h1>
    <div class="gridlist">
    @(Html.Kendo().Grid<com.kuazoo.Models.CountryModel>()
        .Name("gridCountry")
        .Columns(columns =>
        {
            columns.Bound(p => p.CountryName).Title("Name");
            columns.Bound(p => p.LastAction).ClientTemplate(
                "#if(LastAction!='5'){#" +
                "<a class='gridBtn' href='CountryEdit?CountryId=#=CountryId#'><span class='fa fa-pencil' title='Edit' ></span></a>&nbsp;&nbsp;" +
                "|&nbsp;&nbsp;<a class='gridBtn k-button-icontext k-grid-delete'  href=''><span class='fa fa-archive' title='Archive' ></span></a>" +
                "#}#").Title("Action").Filterable(filter => filter.Enabled(false));
            columns.Command(command => command.Destroy()).Visible(false);//for make custom button work
        })
        .Editable(editable => editable.DisplayDeleteConfirmation("Do you want to archive this Country?"))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(10)
                    .Events(events => events.Error("error_handlerCountry"))
            .Read(read => read.Action("Country_Read", "Admin"))
            .Destroy(destroy => destroy.Action("Country_Destroy", "Admin"))
            .Model(model =>
            {
                model.Id(p => p.CountryId);
            })
            //.Filter(filter=>filter.Add(p=>p.LastAction).IsNotEqualTo("5"))
        )
        .Events(events => events.DataBound("onDataBoundCountry").Change("onChangeCountry"))
        .Filterable(filterable => filterable
            .Extra(false)
                .Operators(operators => operators
                .ForString(str => str.Clear()
                    .StartsWith("Starts with")
                    .Contains("Contains")
                ))
        )
        .Pageable(page => page
            .Refresh(true)
            .PageSizes(true)
        )
        .Filterable()
        .Selectable()
        .Scrollable(scr => scr.Height(280))
        .Sortable(sortable => sortable
            .AllowUnsort(true)
            .SortMode(GridSortMode.MultipleColumn))
            //.Groupable()
        .Resizable(resize => resize.Columns(true))
        .Reorderable(reorder => reorder.Columns(true))
    )
    </div>
                </text>);

            tabstrip.Add().Text("City")
                .Content(@<text>
    <h1>City <a href="CityAdd" class="addNewBtn">Add New</a></h1>
    <div class="gridlist">
    @(Html.Kendo().Grid<com.kuazoo.Models.CityModel>()
                .Name("gridCity")
        .Columns(columns =>
        {
            columns.Bound(p => p.CityName).Title("Name");
            columns.Bound(p => p.LastAction).ClientTemplate(
                "#if(LastAction!='5'){#" +
                "<a class='gridBtn' href='CityEdit?CityId=#=CityId#'><span class='fa fa-pencil' title='Edit' ></span></a>&nbsp;&nbsp;" +
                "|&nbsp;&nbsp;<a class='gridBtn k-button-icontext k-grid-delete'  href=''><span class='fa fa-archive' title='Archive' ></span></a>" +
                "#}#").Title("Action").Filterable(filter => filter.Enabled(false));
            columns.Command(command => command.Destroy()).Visible(false);//for make custom button work
        })
        .Editable(editable => editable.DisplayDeleteConfirmation("Do you want to archive this City?"))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(10)
            .Events(events => events.Error("error_handlerCity"))
            .Read(read => read.Action("City_Read", "Admin"))
            .Destroy(destroy => destroy.Action("City_Destroy", "Admin"))
            .Model(model =>
            {
                model.Id(p => p.CityId);
            })
            //.Filter(filter=>filter.Add(p=>p.LastAction).IsNotEqualTo("5"))
        )
        .Events(events => events.DataBound("onDataBoundCity").Change("onChangeCity"))
        .Filterable(filterable => filterable
            .Extra(false)
                .Operators(operators => operators
                .ForString(str => str.Clear()
                    .StartsWith("Starts with")
                    .Contains("Contains")
                ))
        )
        .Pageable(page => page
            .Refresh(true)
            .PageSizes(true)
        )
        .Filterable()
        .Selectable()
        .Scrollable(scr => scr.Height(280))
        .Sortable(sortable => sortable
            .AllowUnsort(true)
            .SortMode(GridSortMode.MultipleColumn))
        //.Groupable()
        .Resizable(resize => resize.Columns(true))
        .Reorderable(reorder => reorder.Columns(true))
    )
    </div>
                </text>);
        })
)

</div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        var kvp = document.location.hash.substr(1);
        if (kvp == "country") {
            var ts = $("#tabstrip").data("kendoTabStrip");
            ts.select(0);
        }
        else if (kvp == "city") {
            var ts = $("#tabstrip").data("kendoTabStrip");
            ts.select(1);
        }
    });
    var viewactive = 0;
    function onDataBoundCountry(e) {
//        var data = this.dataSource.filter();
//        if (data != null) {
//            //console.log(data);
//            document.location.hash = "";
//            if (data.filters.length > 1) {
//                for (var i = 1; i < data.filters.length; i++) {
//                    console.log(data.filters[i].field + " " + data.filters[i].operator + " " + data.filters[i].value);
//                    insertParam(data.filters[i].field, data.filters[i].value);
//                }
//            }
        //        }
        $(".gridBtn").click(function () {
            viewactive = 1;
            setTimeout(function () {
                viewactive = 0;
            }, 100);
        });
    }
    function onChangeCountry(e) {
    
        setTimeout(function () {
            if (viewactive == 0) {
        //var data = this.select();
        //console.log(data);
        var grid = $("#gridCountry").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        window.location = "CountryEdit?CountryId=" + selectedItem.CountryId;
            }
        }, 100);
    }

    function error_handlerCountry(e) {
        if (e.errors) {
            var result = '<div id="breadcrumbs"><div class="mainwrap">';
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message = this;
                    });
                }
            });
            if (message != "") {
                if (message == "1") {
                    result += '<div class="notif csuccess"><div class="notifwrap success"><strong>Success:</strong> Country archived successfully</div></div>';
                }
                else if (message == "2") {
                    result += '<div class="notif cerror"><div class="notifwrap error"><strong>Error:</strong> Failed Delete</div></div>';
                }
                else {
                    result += '<div class="notif cwarning"><div class="notifwrap warning"><strong>Error:</strong> ' + this + '</div></div>';
                }
                result += "</div></div>";
                $("#msgresult").html(result);
            }
            //alert(message);
            var grid = $('#gridCountry').data('kendoGrid');
            grid.dataSource.read();
            grid.refresh();
        }
    }
    function onDataBoundCity(e) {
//        var data = this.dataSource.filter();
//        if (data != null) {
//            //console.log(data);
//            document.location.hash = "";
//            if (data.filters.length > 1) {
//                for (var i = 1; i < data.filters.length; i++) {
//                    console.log(data.filters[i].field + " " + data.filters[i].operator + " " + data.filters[i].value);
//                    insertParam(data.filters[i].field, data.filters[i].value);
//                }
//            }
        //        }
        $(".gridBtn").click(function () {
            viewactive = 1;
            setTimeout(function () {
                viewactive = 0;
            }, 100);
        });
    }
    function onChangeCity(e) {
    
        setTimeout(function () {
            if (viewactive == 0) {
        //var data = this.select();
        //console.log(data);
        var grid = $("#gridCity").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        window.location = "CityEdit?CityId=" + selectedItem.CityId;
            }
        }, 100);
    }

    function error_handlerCity(e) {
        if (e.errors) {
            var result = '<div id="breadcrumbs"><div class="mainwrap">';
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message = this;
                    });
                }
            });
            if (message != "") {
                if (message == "1") {
                    result += '<div class="notif csuccess"><div class="notifwrap success"><strong>Success:</strong> City archived successfully</div></div>';
                }
                else if (message == "2") {
                    result += '<div class="notif cerror"><div class="notifwrap error"><strong>Error:</strong> Failed Delete</div></div>';
                }
                else {
                    result += '<div class="notif cwarning"><div class="notifwrap warning"><strong>Error:</strong> ' + this + '</div></div>';
                }
                result += "</div></div>";
                $("#msgresult").html(result);
            }
            //alert(message);
            var grid = $('#gridCity').data('kendoGrid');
            grid.dataSource.read();
            grid.refresh();
        }
    }
</script>