@model com.kuazoo.Models.InventoryItemModel.Prize
@{
    ViewBag.Title = "Archived Prize";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {
        changeverticalnav(3);
        $(document).tooltip();
    });
</script>
<div id="mainlist">
<div id="mainwrap">
    <h1>Archived Prize</h1>
    <div class="gridlist">
    @(Html.Kendo().Grid<com.kuazoo.Models.InventoryItemModel.Prize>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.PrizeId).Title("Prize ID").Hidden(false).Visible(true);
            columns.Bound(p => p.Name).Title("Prize Name");
            columns.Bound(p => p.GroupName).Title("Group Name");
            columns.Bound(p => p.ExpiryDate).Format("{0:dd MMM yyyy}").Title("Expiry Date");
            columns.Bound(p => p.Create).Format("{0:dd MMM yyyy}").Title("Created On");
            columns.Bound(p => p.WinnerEmail).Title("Winner");
            columns.Bound(p => p.LastAction).ClientTemplate(
                "<a class='gridBtn' href='ArchivedPrizeView?PrizeId=#=PrizeId#'><span class='fa fa-eye' title='View' ></span></a>&nbsp;&nbsp;"
                ).Title("Action").Filterable(filter => filter.Enabled(false)).Width(200);
        })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(10)
            .Events(events => events.Error("error_handler"))
            .Read(read => read.Action("ArchivedPrize_Read", "Admin"))
            .Model(model =>
            {
                model.Id(p => p.PrizeId);
            })
            //.Filter(filter=>filter.Add(p=>p.LastAction).IsNotEqualTo("5"))
        )
        .Events(events => events.DataBound("onDataBound").Change("onChange"))
        .Filterable(filterable => filterable
            .Extra(false)
                .Operators(operators => operators
                .ForString(str => str.Clear()
                    .StartsWith("Starts with")
                    .Contains("Contains")
                ))
        )
        .Pageable(page => page
            .Refresh(true)
            .PageSizes(true)
        )
        .Selectable()
        .Filterable()
        .Scrollable(scr => scr.Height(280))
        .Sortable(sortable => sortable
            .AllowUnsort(true)
            .SortMode(GridSortMode.MultipleColumn))
        //.Groupable()
        .Resizable(resize => resize.Columns(true))
        .Reorderable(reorder => reorder.Columns(true))
    )
    </div>
</div>
</div>
<script type="text/javascript">
    $(window).load(function () {
        filtergrid();
    });
    var viewactive = 0;
    function onDataBound(e) {
        var data = this.dataSource.filter();
        if (data != null) {
            //console.log(data);
            document.location.hash = "";
            if (data.filters.length > 1) {
                for (var i = 1; i < data.filters.length; i++) {
                    //console.log(data.filters[i].field + " " + data.filters[i].operator + " " + data.filters[i].value);
                    insertParam(data.filters[i].field, data.filters[i].value);
                }
            }
        }
        $(".gridBtn").click(function () {
            viewactive = 1;
            setTimeout(function () {
                viewactive = 0;
            }, 100);
        });
    }
    function onChange(e) {
        setTimeout(function () {
            if (viewactive == 0) {
                //var data = this.select();
                //console.log(data);
                var grid = $("#grid").data("kendoGrid");
                var selectedItem = grid.dataItem(grid.select());
                window.location = "ArchivedPrizeView?PrizeId=" + selectedItem.PrizeId;
            }
        }, 100);
    }
    function insertParam(key, value) {
        key = encodeURI(key); value = encodeURI(value);

        var kvp = document.location.hash.substr(1).split('&');
        //console.log(kvp);
        var i = kvp.length; var x; while (i--) {
            x = kvp[i].split('=');

            if (x[0] == key) {
                x[1] = value;
                kvp[i] = x.join('=');
                break;
            }
        }

        if (i < 0) { kvp[kvp.length] = [key, value].join('='); }

        //this will reload the page, it's likely better to store this until finished
        document.location.hash = kvp.join('&');
    }
    function filtergrid() {
        var param = [];
        var kvp = document.location.hash.substr(1).split('&');
        for (var i = 0; i < kvp.length; i++) {
            if (kvp[i] != "") {
                var re = kvp[i].split('=');
                var array = { 'field': re[0], 'operator': 'contains', 'value': re[1] };
                param.push(array);
            }
        }
        if (param.length > 0) {
            //console.log(param);
            var grid = $('#grid').data('kendoGrid');
            grid.dataSource.filter(param);
            grid.refresh();
        }
    }
    function error_handler(e) {
        if (e.errors) {
            var result = '<div id="breadcrumbs"><div class="mainwrap">';
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message = this;
                    });
                }
            });
            if (message != "") {
                if (message == "1") {
                    result += '<div class="notif csuccess"><div class="notifwrap success"><strong>Success:</strong> Prize archived successfully</div></div>';
                }
                else if (message == "2") {
                    result += '<div class="notif cerror"><div class="notifwrap error"><strong>Error:</strong> Failed Delete</div></div>';
                }
                else {
                    result += '<div class="notif cwarning"><div class="notifwrap warning"><strong>Error:</strong> ' + this + '</div></div>';
                }
                result += "</div></div>";
                $("#msgresult").html(result);
            }
            //alert(message);
            var grid = $('#grid').data('kendoGrid');
            grid.dataSource.read();
            grid.refresh();
        }
    }
</script>