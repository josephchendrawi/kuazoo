@model com.kuazoo.Models.MerchantModel
@{
    ViewBag.Title = "Merchant Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
    <script src="@Url.Content("~/Scripts/jquery.fancybox.js")" type="text/javascript"></script>
    <link rel="stylesheet" href="@Url.Content("~/Content/fancy/jquery.fancybox.css")">
<script type="text/javascript"
      src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDBe9tprDB4drAPp-O4-Ypcer1EOvUUvrQ&sensor=true">
    </script>
<script type="text/javascript">
    var hook = true;
    window.onbeforeunload = function () {
        if (hook) {
            return "You are about to leave this page";
        }
    }
    $(document).ready(function () {
        changeverticalnav(1);
        $('.fancybox').fancybox();
        @if (ViewBag.errors != null || ViewBag.result != null)
        {
        <text>
        $("#_Description").val(decodeURI($("#Description").val()));
        $("#_Description").htmlarea();
        </text>
        }
        else{
        <text>
        $("#_Description").val($("#Description").val());
        $("#_Description").htmlarea();
        </text>
        }
    });
</script>
<input type="hidden" value="" id="tempChoose2" name="tempChoose2"/>
<input type="hidden" value="" id="tempChooseName2" name="tempChooseName2"/>
<input type="hidden" value="" id="tempChooseUrl2" name="tempChooseUrl2"/>
<input type="hidden" value="" id="tempChooseDraft2" name="tempChooseDraft2"/>
<div id="breadcrumbs">
    <div class="mainwrap">
        <a href="Merchant">Merchant</a> <span class="active"> / Edit Merchant</span>
        @{
            if (ViewBag.result != null)
            {
                if (ViewBag.result == "1")
                {
                    <div class="notif csuccess"><div class="notifwrap success"><strong>Success:</strong> Merchant updated successfully</div></div>
                }
                else if (ViewBag.result == "3")
                {
                    <div class="notif cerror"><div class="notifwrap error"><strong>Error:</strong> Failed Update Merchant</div></div>
                }
                else
                {
                    <div class="notif cwarning"><div class="notifwrap warning"><strong>Warning:</strong> @ViewBag.result</div></div>
                }
            }
        }
    </div>
</div>
<div id="main">
    <div id="mainwrap">
        <h1>Edit Merchant</h1>
    </div>
        @using (Html.BeginForm())
        {
            @Html.HiddenFor(model=>model.MerchantId)
            @Html.HiddenFor(model=>model.StatusId)
            @Html.HiddenFor(model => model.Latitude)
            @Html.HiddenFor(model => model.Longitude)
   
    <div id="wrap">
    <div class="colright">
        <div class="colhalf">
            <div>
                <div class="colleft">@Html.LabelFor(model => model.Name)</div>
                <div class="colright">@Html.TextBoxFor(model => model.Name, new { @class = "long" })@Html.ValidationMessageFor(model => model.Name)</div>
            </div>
            <div>
                <div class="colleft">@Html.LabelFor(model => model.ContactNumber)</div>
                <div class="colright">@Html.TextBoxFor(model => model.ContactNumber, new { @class = "medium" })@Html.ValidationMessageFor(model => model.ContactNumber)</div>
            </div>
            <div>
                <div class="colleft">@Html.LabelFor(model => model.Email)</div>
                <div class="colright">@Html.TextBoxFor(model => model.Email, new { @class = "long" , placeholder="email@mail.com"})@Html.ValidationMessageFor(model => model.Email)</div>
            </div>
            <div>
                <div class="colleft">@Html.LabelFor(model => model.Website)</div>
                <div class="colright">@Html.TextBoxFor(model => model.Website, new { @class = "long", placeholder = "http://www.website.com" })@Html.ValidationMessageFor(model => model.Website)</div>
            </div>
            <div>
                <div class="colleft">@Html.LabelFor(model => model.Facebook)</div>
                <div class="colright">@Html.TextBoxFor(model => model.Facebook, new { @class = "long", placeholder = "http://www.facebook.com"})@Html.ValidationMessageFor(model => model.Facebook)</div>
            </div>
            <div>
                <div class="colleft">@Html.LabelFor(model => model.Description)</div>
                <div class="colright"><textarea id="_Description" class="long textarea" rows="15"></textarea>
                @Html.HiddenFor(model => model.Description, new { @class = "long textarea"})
                @Html.ValidationMessageFor(model => model.Description)</div>
            </div>
            <div>
                <div class="colleft" style="vertical-align:top">Image</div>
                @Html.HiddenFor(model => model.SubImageId)
                @Html.HiddenFor(model => model.SubImageName)
                @Html.HiddenFor(model => model.SubImageUrl)
                <div class="colright"  id="merchantsubimageplace">
                    @if (Model != null && Model.SubImageId != null)
                    {
                        var imgid = Model.SubImageId.Split(',');
                        var imgname = Model.SubImageName.Split('|');
                        var imgurl = Model.SubImageUrl.Split('|');
                        var imgurllink = Model.SubImageUrlLink.Split('|');
                        for (int i = 0; i < imgid.Count(); i++)
                        {
                            if (imgid[i] != "")
                            {
                                var str = "subimgprize" + imgid[i];
                                var strimg = "txtSubImg"+imgid[i];
                                <div id="@str" class="subimgplace">
                                    <a  class="fancybox subimga" style="float:left" href="@imgurl[i]">
                                        <img src="@imgurl[i]" class="imgThumb" />
                                    </a>   
                                    <div class="subimghalf">
                                    <input id="@strimg" name="@strimg" type="text" class="medium" value="@imgurllink[i]">
                                    </div> 
                                    <div class="deleteIcon3" onclick="deleteSubImgMerchant(@imgid[i],'@imgname[i]','@imgurl[i]')"></div>
                                </div>
                            }
                        }
                    }
                    @*<div id="subimgprize148" class="subimgplace">
                        <a class="fancybox subimga" href="http://localhost:2070/Content/upload/20140815084523-Chrysanthemum2.jpg">
                            <img src="http://localhost:2070/Content/upload/20140815084523-Chrysanthemum2.jpg" class="imgThumb">
                        </a>
                        <div class="subimghalf">
                        <input type="text" class="medium">
                        </div>
                        <div class="deleteIcon3" onclick="deleteSubImgMerchant(148,'20140815084523-Chrysanthemum2.jpg','http://localhost:2070/Content/upload/20140815084523-Chrysanthemum2.jpg')">
                        </div>
                    </div>*@
                </div>
                <div class="colright" style="display:table;width:150px;">
                    <input id="merchantsubImagebtn" type="button" value="Add Image" class="submitBtn"/>
                </div>
            </div> 
        </div>
        <div class="colhalf">
            <div class="colright">
                <div class="colleft">@Html.LabelFor(model => model.AddressLine1)</div>
                <div class="colright" style="vertical-align:top">@Html.TextBoxFor(model => model.AddressLine1, new { @class = "long" })@Html.ValidationMessageFor(model => model.AddressLine1)</div>
            </div>
            @*<div>
                <div class="colleft">@Html.LabelFor(model => model.AddressLine2)</div>
                <div class="colright">@Html.TextBoxFor(model => model.AddressLine2)@Html.ValidationMessageFor(model => model.AddressLine2)</div>
            </div>*@
            <div class="colhalfhalf">            
                <div>
                    <div class="colleft">@Html.LabelFor(model => model.CountryId)</div>
                    <div class="colright">
                        @(Html.Kendo().DropDownList()
                            .Name("countryDropDown")
                                .HtmlAttributes(new { @class = "kendoDropdown" })
                                .OptionLabel("--Select Country--")
                                .DataTextField("CountryName")
                                .DataValueField("CountryId")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("CountryList", "Admin");
                                    });
                                })
                                .Value(Model.CountryId.ToString())
                        )
                    </div>
                </div>
                <div>
                    <div class="colleft">@Html.LabelFor(model => model.CityId)</div>
                    <div class="colright">
                        @(Html.Kendo().ComboBox()
                            .Name("cityDropDown")
                                .HtmlAttributes(new { @class = "kendoDropdown" })
                                .Placeholder("--Select City--")
                                .DataTextField("CityName")
                                .DataValueField("CityId")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("CityList", "Admin").Data("filterCity");
                                    }).ServerFiltering(true);
                                })
                                .CascadeFrom("countryDropDown")
                                .Events(e =>
                                {
                                    e.Change("citychange");
                                })
                                .Value(Model.CityId.ToString())
                        )
                        <script>
                            function filterCity() {
                                return {
                                    countryid: $("#countryDropDown").val()
                                };
                            }
                            function citychange() {
                                $("#CityId").val($("#cityDropDown").val());
                            };
                        </script>
                        @Html.HiddenFor(model => model.CityId)
                        @Html.ValidationMessageFor(model => model.CityId)
                    </div>
                </div>
            </div>
            <div class="colhalfhalf">
                <div>
                    <div class="colleft">@Html.LabelFor(model => model.PostCode)</div>
                    <div class="colright">@Html.TextBoxFor(model => model.PostCode, new { @class = "short250" })@Html.ValidationMessageFor(model => model.PostCode)</div>
                </div>
                <div>
                    <div class="colleft">&nbsp;</div>
                    <div class="colright">
                        <div id="LocateBtn" class="mediumBtn" onclick="PostLocate()">Locate Coordinate</div>
                    </div>
                </div>  
            </div>
            <div class="colright">
                @Html.HiddenFor(model => model.TempLatLong)
                <strong>Click on the map to set preferred coordinate.</strong><br />
                <div id="map_canvas"></div>
                <script type="text/javascript">
                    $(function () {
                        initializeEditMap();
                    }); 
                </script> 
            </div>    
        </div>
    </div>
    </div>
            <div class="wrapend">
                <div class="colleft"></div>
                <div class="colright">
                    <input type="submit" value="Update" class="submitBtn" onclick="return UpdateConf()"/>
                    <a href="Merchant"><input type="button" value="Cancel" class="grayBtn"/></a>
                </div>
            </div>
        }

</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#Name").focus();
        $("#merchantsubImagebtn").click(function () {
            $("#tempChoose2").val("");
            $("#tempChooseUrl2").val("");
            $("#tempChooseUrlLink2").val("");
            $("#tempChooseName2").val("");
            $.fancybox.open({
                href: '@Url.Action("ImageListMulti", "Admin")',
                type: 'iframe',
                padding: 0,
                afterClose: function () {
                    if ($("#tempChoose2").val() != "") {
                        var ch = $("#tempChoose2").val().split('|');
                        var chi = $("#tempChooseName2").val().split('|');
                        var chu = $("#tempChooseUrl2").val().split('|');
                        var html = "";
                        for (var i = 0; i < ch.length; i++) {
                            if (ch[i] != '') {
                                html += '<div id="subimgprize' + ch[i] + '" class="subimgplace"><a  class="fancybox subimga" href="' + chu[i] + '"><img src="' + chu[i] + '" class="imgThumb" /></a>';
                                var cho = ch[i] + ",'" + chi[i] + "','" + chu[i] + "'";
                                html += ' <div class="subimghalf"><input type="text" class="medium" id="txtSubImg' + ch[i] + '" name="txtSubImg' + ch[i] + '"></div>';
                                html += ' <div class="deleteIcon3" onclick="deleteSubImgMerchant(' + cho + ')"></div></div>';
                                $("#SubImageId").val($("#SubImageId").val() + "," + ch[i]);
                                $("#SubImageName").val($("#SubImageName").val() + "|" + chi[i]);
                                $("#SubImageUrl").val($("#SubImageUrl").val() + "|" + chu[i]);
                            }
                        }
                        $("#merchantsubimageplace").append(html);
                        $("#tempChoose2").val("");
                        $("#tempChooseUrl2").val("");
                        $("#tempChooseName2").val("");
                    }
                }
            });
        });
    });
    function UpdateConf() {
        hook = false;
        $("#Description").val(encodeURI($("#_Description").val()));
        var r = confirm("Confirm update merchant details?");
        if (r == true) return true;
        else return false;
    }

    function deleteSubImgMerchant(id, name, url) {
        $("#subimgprize" + id).remove();
        var current = $("#SubImageId").val();
        current = current.replace(id, '');
        $("#SubImageId").val(current);
        var currentname = $("#SubImageName").val();
        currentname = currentname.replace(name, '');
        $("#SubImageName").val(currentname);
        var currenturl = $("#SubImageUrl").val();
        currenturl = currenturl.replace(url, '');
        $("#SubImageUrl").val(currenturl);
    }
    function PostLocate() {
        var line = $('#AddressLine1').val();
        var zipcode = $('#PostCode').val();
        var city = $('#cityDropDown').data("kendoComboBox").text();
        if (city == null) {
            city = "";
        }
        var address = line + "," + zipcode + "," + city;

        var geocoder = new google.maps.Geocoder();
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                map.setCenter(results[0].geometry.location);
                if (marker == null) {
                    marker = createMarker(results[0].geometry.location, "name", $('#Name').val());
                }
                else {
                    marker.setPosition(results[0].geometry.location);
                }

                //assign coordinate value as hidden data 
                $('#TempLatLong').val(results[0].geometry.location.toString());

            } else {
                alert("Location not found ");
            }
        });

    }

    var lat, lng, map;

    var infowindow = new google.maps.InfoWindow();

    function initializeEditMap() {

        geocoder = new google.maps.Geocoder();
        lat = $('#Latitude').val();
        lng = $('#Longitude').val();
        $('#TempLatLong').val("(" + lat + "," + lng + ")");
        var loc = new google.maps.LatLng(lat, lng);
        var mapOptions = {
            zoom: 16,
            center: loc,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("map_canvas"),
				            mapOptions);

        marker = new google.maps.Marker({
            map: map,
            draggable: true,
            animation: google.maps.Animation.DROP,
            position: loc
        });

        //place a marker on the map when user click map , and then modify the coordinate stored in hidden field for update use later
        google.maps.event.addListener(map, 'click', function (event) {
            //clear default marker on the map
            marker.setMap(null);

            //call function to create marker
            if (marker) {
                marker.setMap(null);
                marker = null;
            }

            var geocoder = new google.maps.Geocoder();
            var addr = "null";

            geocoder.geocode({ 'latLng': event.latLng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[1]) {
                        //to get city *callback(results[1].address_components[1].long_name);
                        addr = results[1].formatted_address;

                        marker = createMarker(event.latLng, "name", $('#Name').val());

                        //assign coordinate value as hidden data 
                        $('#TempLatLong').val(event.latLng.toString());
                    }
                } else {
                    addr = "still null";
                    marker = createMarker(event.latLng, "name", $('#Name').val());
                }

            });

        });



    }

    function createMarker(latlng, name, html) {
        var contentString = html;
        var marker = new google.maps.Marker({
            position: latlng,
            map: map,
            zIndex: Math.round(latlng.lat() * -100000) << 5
        });

        google.maps.event.addListener(marker, 'click', function () {
            infowindow.setContent(contentString);
            infowindow.open(map, marker);
        });
        //google.maps.event.trigger(marker, 'click');
        return marker;
    }
</script>