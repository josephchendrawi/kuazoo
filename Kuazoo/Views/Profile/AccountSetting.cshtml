@model com.kuazoo.Models.MemberModel.MemberVM2
@{
    ViewBag.Title = "Account Setting";
    Layout = "~/Views/Shared/_ProfileLayout.cshtml";
}
@section AddToHead{
    <link href="@Url.Content("~/Content/checkout.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery.fancybox.js")" type="text/javascript"></script>
<link rel="stylesheet" href="@Url.Content("~/Content/fancy/jquery.fancybox.review.css")">
    <script type="text/javascript">    
        $(document).ready(function () {
            changeprofilenav(0);


//            if ("@Model.Billing.PaymentMethodStr" != "") {
//                if ("@Model.Billing.PaymentMethodStr" == "ipay88") {
//                    $("#paymenton").prop("checked", true);
//                }
//                else {
//                    $("#paymentcc").prop("checked", true);
//                    payment("@Model.Billing.PaymentMethodStr")
//                    $("#tcc").val("@Model.Billing.PaymentCC");
//                    $("#texpiremonth").val(@Model.Billing.PaymentExpireMonth);
//                    $("#texpireyear").val(@Model.Billing.PaymentExpireYear);
//                }
//            }
        });

        function payment(i) {
            $("#Billing_PaymentMethodStr").val(i);
            $(".visa").removeClass("choose");
            $(".master").removeClass("choose");
            $(".amex").removeClass("choose");
            $("." + i).addClass("choose");
            $("#paymentcc").attr("data-value", i);
            $("#paymentccplace").css("display", "block");
        }
        function paymenton() {
            $("#Billing_PaymentMethodStr").val('ipay88');
            $("#Billing_PaymentCC").val('');
            $("#Billing_PaymentExpireMonth").val(1);
            $("#tcc").val('');
            $("#texpiremonth").val(1);
            var d = new Date();
            var n = d.getFullYear();
            $("#Billing_PaymentExpireYear").val(n);
            $("#texpireyear").val(n);

            $(".visa").removeClass("choose");
            $(".master").removeClass("choose");
            $(".amex").removeClass("choose");
            $("#paymentcc").attr("data-value", "");
            $("#paymentccplace").css("display", "none");
        }
        function keyupCC(e){
            $("#Billing_PaymentCC").val(e.value);
        }
        function keychangeMonth(e){
            $("#Billing_PaymentExpireMonth").val(e.value);
        }
        function keychangeYear(e){
            $("#Billing_PaymentExpireYear").val(e.value);
        }
    </script>

}
@section AddToBread{


<div class="notifwrap" id="notification">
@if (ViewBag.msg != null && ViewBag.msg != "")
{
    if (ViewBag.msg == "1")
    {
        <div class="notif csuccess"><div class="notifwrap success"><strong>Success:</strong> Profile saved</div></div>
    }
}
@if (ViewBag.err != null)
{
    <div class="notif cerror"><div class="notifwrap error"><strong>Error:</strong> @ViewBag.err</div></div>
}
@if (ViewBag.err2 != null)
{
    <div class="notif cerror"><div class="notifwrap error">@ViewBag.err2</div></div>
}
@*@if (!ViewData.ModelState.IsValid)
{
    <div class="notif cerror"><div class="notifwrap error"><strong>Error:</strong> 
        <div>@Html.ValidationMessageFor(model => model.FirstName)</div>
        <div>@Html.ValidationMessageFor(model => model.LastName)</div>
        <div>@Html.ValidationMessageFor(model => model.Gender)</div>
    </div></div>
}*@

</div>
}
<div id="fb-root"></div>
<script language="javascript" type="text/javascript">
    window.fbAsyncInit = function () {
        FB.init({
            appId: '@Kuazoo.Helper.SetFacebookId',
            xfbml      : true,
            version    : 'v2.1'
        });
    };
    (function (d) {
        var js, id = 'facebook-jssdk'; if (d.getElementById(id)) { return; }
        js = d.createElement('script'); js.id = id; js.async = true;
        js.src = "//connect.facebook.net/en_US/all.js";
        d.getElementsByTagName('head')[0].appendChild(js);
    } (document));
    function FBlogin() {
        FB.login(function (response) {
            if (response.authResponse) {
                var url = "https://graph.facebook.com/oauth/access_token?client_id=@Kuazoo.Helper.SetFacebookId" +
                            "&client_secret=@Kuazoo.Helper.SetFacebookSecret" +
                            "&grant_type=fb_exchange_token&fb_exchange_token=" + response.authResponse.accessToken;
                $.post(url, function (data) {
                    var n = data.split("&");
                    var n2 = n[0].split("=");
                    window.location = "@Url.Action("FacebookLogin", "User")"+"?token=" + n2[1]+"&returnUrl=@Url.Action("AccountSetting", "Profile")";
                }).fail(function () { 
                    window.location = "@Url.Action("FacebookLogin", "User")"+"?token=" + response.authResponse.accessToken+"&returnUrl=@Url.Action("AccountSetting", "Profile")";
                });
            } else {
                // user clicked Cancel
            }
        }, { scope: 'user_birthday,email,user_checkins,publish_stream,read_friendlists,manage_friendlists,offline_access' });
    };
</script>

    @using (Html.BeginForm())
    {
    
    @Html.AntiForgeryToken()
<input type="hidden" value="" id="tempPass" name="tempPass"/>
<input type="hidden" value="" id="tempChoose" name="tempChoose"/>
<input type="hidden" value="" id="tempChooseName" name="tempChooseName"/>
<input type="hidden" value="" id="tempChooseUrl" name="tempChooseUrl"/>
<input type="hidden" value="" id="tempChooseDraft" name="tempChooseDraft"/>
<div class="asrow">
    <div class="ascol11">Profile picture</div>
    <div class="ascol2">
        @Html.HiddenFor(model => model.ImageId)
        @Html.HiddenFor(model => model.ImageName)
        @Html.HiddenFor(model => model.ImageUrl)
        @if (Kuazoo.Helper.currFacebookId != string.Empty)
        {
            <div id="imageplace">
                <img class="lazy" data-original="http://graph.facebook.com/@Kuazoo.Helper.currFacebookId/picture" class="userimg" />
            </div>
        }
        else
        {
        <div id="imageplace">
            @if (Model != null && Model.ImageId != null && Model.ImageId != 0)
            {
                <img class="lazy" data-original="@Model.ImageUrl" />
            }
            else
            {
                <img class="lazy" data-original="@Url.Content("~/Content/img/default-image.jpg")" />
            }
        </div>
        <div class="imgbtn">
            <input id="mainImagebtn" type="button" value="Add Image" class="btnEdit"/>
        </div>
        }
    </div>
</div>
<div class="asrow">
    <div class="ascol1">Username</div>
    <div class="ascol2">
        @Model.Email
    </div>
</div>
<div class="asrow">
    <div class="ascol1">Name</div>
    <div class="ascol2">
        <div class="full">
            <div class="ascol21">
                @Html.TextBoxFor(model => model.FirstName, new { @class = "txtInput100" })
            </div>
            @Html.ValidationMessageFor(model => model.FirstName)
            <div class="ascol2space"></div>
            <div class="ascol22">
                @Html.TextBoxFor(model => model.LastName, new { @class = "txtInput100" })
            </div>
            @Html.ValidationMessageFor(model => model.LastName)
        </div>
    </div>
    @*<div class="ascol3">
        @Html.ValidationMessageFor(model => model.FirstName)
        @Html.ValidationMessageFor(model => model.LastName)
    </div>*@
</div>
<div class="asrow">
    <div class="ascol1">Gender</div>
    <div class="ascol2">
        @Html.RadioButtonFor(model => model.Gender, 1, new { id = "genderMale" })&nbsp;@Html.Label("genderMale", "Male") &nbsp;&nbsp;&nbsp;
        @Html.RadioButtonFor(model => model.Gender, 2, new { id = "genderFemale" })&nbsp;@Html.Label("genderFemale", "Female")
    </div>
    <div class="ascol3">
        @Html.ValidationMessageFor(model => model.Gender)
    </div>
</div>
<div class="asrow">
    <div class="ascol1">Birthday</div>
    <div class="ascol2">
        @*@(Html.Kendo().DatePickerFor(model => model.DateOfBirth)
                    .HtmlAttributes(new { @class = "h30" })
            .Format("dd MMM yyyy")
        )*@
        <div class="ascol21" style="width:55px">
        @Html.DropDownListFor(model => model.Day, new SelectList(
                  new List<Object>{ 
                       1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
                    }),
                    new { style = "width: 50px;" })
        </div>
        <div class="ascol22" style="width:105px">
        @Html.DropDownListFor(model => model.Month, new SelectList(
                  new List<Object>{ 
                       new { value = 1 , text = "January" },
                       new { value = 2 , text = "February"},
                       new { value = 3 , text = "March" },
                       new { value = 4 , text = "April" },
                       new { value = 5 , text = "May" },
                       new { value = 6 , text = "June" },
                       new { value = 7 , text = "July" },
                       new { value = 8 , text = "August" },
                       new { value = 9 , text = "September" },
                       new { value = 10 , text = "October" },
                       new { value = 11 , text = "November" },
                       new { value = 12 , text = "December" }
                    },
                  "value",
                  "text"),
                  new { style = "width: 100px;" })
        </div>
        <div class="ascol23" style="width:75px">
        @Html.DropDownListFor(model => model.Year, new SelectList(
                  new List<Object>{ 
                       1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014
                    }),
                  new { style = "width: 70px;" })
        </div>
    </div>
    @*<div class="ascol3">
        @Html.ValidationMessageFor(model => model.DateOfBirth)
    </div>*@
</div>
        if (Model.Facebook == false)
        {
<div class="asrow">
    <div class="ascol1">Password</div>
    <div class="ascol2">
        <a onclick="passBtn()">Change your password</a>
    </div>
    <div class="ascol3">
    </div>
</div>
        }
    @Html.HiddenFor(model => model.Shipping.FirstName)
    @Html.HiddenFor(model => model.Shipping.LastName)
    @Html.HiddenFor(model => model.Shipping.Gender)
    @Html.HiddenFor(model => model.Shipping.Phone)
    @Html.HiddenFor(model => model.Shipping.Gift)
    @Html.HiddenFor(model => model.Shipping.Note)
<div class="asrowblank1">
    <div class="ascol11top">Shipping Address</div>
    <div class="ascol2">
        <div class="full">@Html.TextBoxFor(model => model.Shipping.AddressLine1, new { @class = "txtInput100" })</div>
        <div class="full">@Html.TextBoxFor(model => model.Shipping.AddressLine2, new { @class = "txtInput100" })</div>
    </div>
    <div class="ascol3">
    </div>
</div>
<div class="asrowblank2">
    <div class="ascol11top">City</div>
    <div class="ascol2">
        <div class="full">@Html.TextBoxFor(model => model.Shipping.City, new { @class = "txtInput100" })</div>
    </div>
    <div class="ascol3">
    </div>
</div>
<div class="asrowblank2">
    <div class="ascol11top">State</div>
    <div class="ascol2">
        <div class="full">
            <div class="ascol21">
                @Html.TextBoxFor(model => model.Shipping.State, new { @class = "txtInput100" })
            </div>
            <div class="ascol2space"></div>
            <div class="ascol22">
                @Html.TextBoxFor(model => model.Shipping.ZipCode, new { @class = "txtInput100", placeholder = "Zip Code" })
            </div>
        </div>
    </div>
    <div class="ascol3">
    </div>
</div>
<div class="asrowblank3">
    <div class="ascol11top">Country</div>
    <div class="ascol2">
        <div class="full">@Html.TextBoxFor(model => model.Shipping.Country, new { @class = "txtInput100", value = "Malaysia" })</div>
    </div>
    <div class="ascol3">
    </div>
</div>
    @Html.HiddenFor(model => model.Billing.FirstName)
    @Html.HiddenFor(model => model.Billing.LastName)
    @Html.HiddenFor(model => model.Billing.Gender)
    @Html.HiddenFor(model => model.Billing.Phone)
    @Html.HiddenFor(model => model.Billing.PaymentMethod)
    @Html.HiddenFor(model => model.Billing.PaymentMethodStr)
    @Html.HiddenFor(model => model.Billing.PaymentCC)
    @Html.HiddenFor(model => model.Billing.PaymentExpireMonth)
    @Html.HiddenFor(model => model.Billing.PaymentExpireYear)
<div class="asrowblank1">
    <div class="ascol11top"></div>
    <div class="ascol2">
    <div class="full">
        <input type="checkbox" id="billingsame" onchange="billingchange(this)"/>&nbsp;<label for="billingsame">Billing Address and Shipping Address are the same.</label>
    </div></div>
    <div class="ascol3">
    </div>
</div>
<div class="asrowblank2">
    <div class="ascol11top">Billing Address</div>
    <div class="ascol2">
        <div class="full">@Html.TextBoxFor(model => model.Billing.AddressLine1, new { @class = "txtInput100" })</div>
        <div class="full">@Html.TextBoxFor(model => model.Billing.AddressLine2, new { @class = "txtInput100" })</div>
    </div>
    <div class="ascol3">
    </div>
</div>
<div class="asrowblank2">
    <div class="ascol11top">City</div>
    <div class="ascol2">
        <div class="full">@Html.TextBoxFor(model => model.Billing.City, new { @class = "txtInput100" })</div>
    </div>
    <div class="ascol3">
    </div>
</div>
<div class="asrowblank2">
    <div class="ascol11top">State</div>
    <div class="ascol2">
        <div class="full">
            <div class="ascol21">
                @Html.TextBoxFor(model => model.Billing.State, new { @class = "txtInput100" })
            </div>
            <div class="ascol2space"></div>
            <div class="ascol22">
                @Html.TextBoxFor(model => model.Billing.ZipCode, new { @class = "txtInput100", placeholder = "Zip Code" })
            </div>
        </div>
    </div>
    <div class="ascol3">
    </div>
</div>
<div class="asrowblank3">
    <div class="ascol11top">Country</div>
    <div class="ascol2">
        <div class="full">@Html.TextBoxFor(model => model.Billing.Country, new { @class = "txtInput100", value = "Malaysia" })</div>
    </div>
    <div class="ascol3">
    </div>
</div>
        if (Model.Facebook)
        {
<div class="asrow">
    <div class="ascol11">Linked accounts</div>
    <div class="ascol2">
        <div class="full">
            <span class="fa fa-facebook fbicon"></span>
            @if (Model.Facebook)
            {
                <text>
                <span>Connected to @Model.Email</span>
                </text>
            }
           @* else
            {
                <text>
                <a onclick="FBlogin()">Connect with Facebook</a>
                </text>
            }*@
        </div>
        @*<div class="full">
            <span class="fa fa-twitter twicon"></span><a href="">Connect with Twitter</a>
        </div>*@
    </div>
    <div class="ascol3">
    </div>
</div>
        }
<div class="asrow">
    <div class="ascol1">Notifications</div>
    <div class="ascol2">
        @Html.CheckBoxFor(model => model.Notif)&nbsp;@Html.LabelFor(model => model.Notif, "Keep me posted for Kuazoo promotions.")
    </div>
    <div class="ascol3">
    </div>
</div>
<div class="ascolfull">
    <button class="btnInput" type="submit">SAVE CHANGES</button>    
</div>
    }
@section AddToFooter{

    
<script type="text/javascript">
    function changedays(){
        //console.log($("#Year").val(), $("#Month").val());
        $.ajax({
            type: "POST",
            url: "GetDays",
            data: "{'smonth':" + $("#Month").val() + ", 'syear':" + $("#Year").val() + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "json"

        }).done(function (data) {
            //console.log(data);
            var dayx = $("#Day").val();
            $("#Day").empty();
            for (var i = 0; i < data.length; i++) {
                $("#Day").append("<option>" + data[i] + "</option>");
            }
            if (dayx > data[data.length - 1]) {
                dayx = data[data.length - 1];
                //console.log(dayx);
            }
            $("#Day").val(dayx);
        });
    }

    $(document).ready(function () {
        changedays();
        $("#Year").change(function () {
            changedays();
        });

        $("#Month").change(function () {
            changedays();
        });


        $("#mainImagebtn").click(function () {
            $("#tempChoose").val("");
            $("#tempChooseUrl").val("");
            $("#tempChooseName").val("");
            $.fancybox.open({
                href: '@Url.Action("ImageList", "Profile")',
                type: 'iframe',
                padding: 0,
                afterClose: function () {
                    if ($("#tempChoose").val() != "") {
                        var html = '<img src="' + $("#tempChooseUrl").val() + '"/>';
                        $("#imageplace").html(html);
                        $("#ImageId").val($("#tempChoose").val());
                        $("#ImageName").val($("#tempChooseName").val());
                        $("#ImageUrl").val($("#tempChooseUrl").val());
                        $("#tempChoose").val("");
                        $("#tempChooseUrl").val("");
                        $("#tempChooseName").val("");
                    }
                }
            });
        });
    });
    function passBtn() {
        $.fancybox.open({
            href: '@Url.Action("ChangePassword", "Profile")',
            type: 'iframe',
            padding: 0,
            width:600,
            height:400,
            fitToView   : false,
            autoSize    : false,
            afterClose: function () {
                if ($("#tempPass").val() != "") {
                    var result = $("#tempPass").val();
                    if (result == "1") {
                        $("#notification").html('<div class="notif csuccess"><div class="notifwrap success"><strong>Success:</strong> Change Password</div></div>');
                    }
                    else {
                        $("#notification").html('<div class="notif csuccess"><div class="notifwrap error"><strong>Error:</strong> ' + result + '</div></div>');
                    }
                }
            }
        });
    }

    function billingchange(e) {
        if (e.checked) {
            $("#Billing_AddressLine1").val($("#Shipping_AddressLine1").val());
            $("#Billing_AddressLine2").val($("#Shipping_AddressLine2").val());
            $("#Billing_City").val($("#Shipping_City").val());
            $("#Billing_State").val($("#Shipping_State").val());
            $("#Billing_ZipCode").val($("#Shipping_ZipCode").val());
            $("#Billing_Country").val($("#Shipping_Country").val());
        }
    }

</script>
}